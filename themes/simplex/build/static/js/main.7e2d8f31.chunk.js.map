{"version":3,"sources":["gampp/gampp.conf.js","gampp/gampp.templater.js","components/Simplex.Title.js","components/Simplex.Content.js","components/Simplex.Content.UpDir.js","components/Simplex.Content.Loader.js","components/Simplex.Footer.js","App.js","index.js"],"names":["GamppContext","createContext","GamppContextProvider","children","useState","url","setUrl","directories","files","content","setContent","loadingContent","setLoadingContent","useEffect","a","loadContent","fetch","conf","req","json","res","Provider","value","GamppTitle","Component","useContext","text","GamppContentUpDir","props","onClick","newUrl","split","pop","join","goUp","GamppContentExplorer","Folder","File","map","directory","idx","key","name","file","window","location","GamppThemeContent","Title","Content","ContentUpDir","ContentLoader","Footer","platform","version","GamppTheme","data","SimplexTitleTemplate","SimplexTitle","SimplexContentFolder","style","cursor","SimplexContentFile","SimplexContent","SimplexContentUpDirTemplate","SimplexContentUpDir","SimplexContentLoader","SimplexFooter","App","document","getElementById","render"],"mappings":"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","file":"static/js/main.7e2d8f31.chunk.js","sourcesContent":["export default {\n    port: 8000,\n    hostname: 'localhost',\n}","import React, { useEffect, useState, useContext, createContext } from 'react'\nimport conf from './gampp.conf'\n\nexport const GamppContext = createContext();\n\nexport function GamppContextProvider({ children }) {\n    const [url, setUrl] = useState('/');\n    const [content, setContent] = useState({ directories: [], files: [] });\n    const [loadingContent, setLoadingContent] = useState(true);\n\n    useEffect(() => {\n        (async () => {\n            setLoadingContent(true);\n            await loadContent();\n            setLoadingContent(false);\n        })();\n        // eslint-disable-next-line\n    }, [url]);\n\n    const loadContent = async () => {\n        const req = await fetch(`http://${conf.hostname}:${conf.port}${url}json`); // http://localhost:5000/json\n        const res = await req.json();\n        setContent(res);\n    }\n\n    return (\n        <GamppContext.Provider value={{\n            url,\n            setUrl,\n            content,\n            setContent,\n            loadingContent,\n            setLoadingContent\n        }}>\n            {children}\n        </GamppContext.Provider>\n    )\n}\n\nexport function GamppTitle({ Component }) {\n    const { url } = useContext(GamppContext);\n\n    return (\n        <Component text={`Content of /servers${url}`} />\n    )\n}\n\nexport function GamppContentUpDir({ Component }) {\n    const { url, setUrl } = useContext(GamppContext);\n\n    const goUp = url => {\n        let newUrl = url.split('/');\n        newUrl.pop()\n        newUrl.pop()\n        newUrl = newUrl.join('/')\n        setUrl(`${newUrl}/`)\n    }\n\n    return (\n        <Component\n            props={{\n                onClick: () => goUp(url)\n            }}\n        />\n    )\n}\n\nexport function GamppContentExplorer({ Folder, File }) {\n    const { content, url, setUrl } = useContext(GamppContext);\n\n    const goToFolder = name => {\n        setUrl(`${url}${name}/`); // old/new/\n    }\n\n    const goToFile = name => {\n        window.location = `http://${conf.hostname}:${conf.port}${url}${name}`\n    }\n\n    return (\n        <>\n            {content.directories.map((directory, idx) => (\n                <Folder\n                    key={idx}\n                    name={directory}\n                    props={{ onClick: () => goToFolder(directory) }}\n                />\n            ))}\n\n            {content.files.map((file, idx) => (\n                <File\n                    key={idx}\n                    name={file}\n                    props={{ onClick: () => goToFile(file) }}\n                />\n            ))}\n        </>\n    )\n}\n\nexport function GamppThemeContent({\n    Title,\n    Content,\n    ContentUpDir,\n    ContentLoader,\n    Footer,\n}) {\n    const { loadingContent, content } = useContext(GamppContext)\n\n    return (\n        <>\n            <Title />\n            {loadingContent ? <ContentLoader /> : (\n                <>\n                    <ContentUpDir />\n                    <Content />\n                    <Footer\n                        platform={content.platform}\n                        version={content.version}\n                    />\n                </>\n            )}\n        </>\n    )\n}\n\nexport function GamppTheme(data) {\n    return (\n        <GamppContextProvider>\n            <GamppThemeContent {...data} />\n        </GamppContextProvider>\n    )\n}\n","import React from 'react'\nimport { GamppTitle } from '../gampp/gampp.templater'\n\nfunction SimplexTitleTemplate({ text }) {\n  return (\n    <h1>{text}</h1>\n  )\n}\n\nfunction SimplexTitle() {\n  return (\n    <GamppTitle Component={SimplexTitleTemplate} />\n  )\n}\n\nexport default SimplexTitle","import React from 'react'\nimport { GamppContentExplorer } from '../gampp/gampp.templater'\n\nfunction SimplexContentFolder({ name, props }) {\n  return (\n    <>\n      <p {...props} style={{ cursor: 'pointer' }}>\n        DIR: {name}\n      </p>\n    </>\n  )\n}\n\nfunction SimplexContentFile({ name, props }) {\n  return (\n    <>\n      <p {...props} style={{ cursor: 'pointer' }}>\n        FILE: {name}\n      </p>\n    </>\n  )\n}\n\nfunction SimplexContent() {\n  return (\n    <GamppContentExplorer\n      Folder={SimplexContentFolder}\n      File={SimplexContentFile}\n    />\n  )\n}\n\nexport default SimplexContent","import React from 'react'\nimport { GamppContentUpDir } from '../gampp/gampp.templater'\n\nfunction SimplexContentUpDirTemplate({ props }) {\n  return (\n    <>\n      <p {...props} style={{ cursor: 'pointer' }}>\n        DIR ..\n      </p>\n    </>\n  )\n}\n\nfunction SimplexContentUpDir() {\n  return (\n    <GamppContentUpDir Component={SimplexContentUpDirTemplate} />\n  )\n}\n\nexport default SimplexContentUpDir","import React from 'react'\n\nfunction SimplexContentLoader() {\n  return (\n    <>\n      <p>\n        Loading...\n      </p>\n    </>\n  )\n}\n\nexport default SimplexContentLoader","import React from 'react'\n\nfunction SimplexFooter({ platform, version }) {\n  return (\n    <footer>\n      <hr />\n      <p>GAMPP in {platform} {version}</p>\n    </footer>\n  )\n}\n\nexport default SimplexFooter","import React from 'react'\nimport { GamppTheme } from './gampp/gampp.templater'\n\nimport SimplexTitle from './components/Simplex.Title'\nimport SimplexContent from './components/Simplex.Content'\nimport SimplexContentUpDir from './components/Simplex.Content.UpDir'\nimport SimplexContentLoader from './components/Simplex.Content.Loader'\nimport SimplexFooter from './components/Simplex.Footer'\n\nfunction App() {\n  return (\n    <>\n      <GamppTheme\n        Title={SimplexTitle}\n        Content={SimplexContent}\n        ContentUpDir={SimplexContentUpDir}\n        ContentLoader={SimplexContentLoader}\n        Footer={SimplexFooter}\n      />\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\n\nconst location = document.getElementById('root');\n\nrender(\n  <App />,\n  location,\n)"],"sourceRoot":""}